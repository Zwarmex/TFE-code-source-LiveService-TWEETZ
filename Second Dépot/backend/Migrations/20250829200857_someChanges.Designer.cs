// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tweetz.MicroServices.LiveService.Data;

#nullable disable

namespace Tweetz.MicroServices.LiveService.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250829200857_someChanges")]
    partial class someChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tweetz.MicroServices.LiveService.Models.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("MSG_Id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MSG_Content");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("MSG_IsDeleted");

                    b.Property<string>("LiveId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LIVE_ApiVideoLiveStreamId");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("MSG_SenderId");

                    b.Property<string>("SenderUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MSG_SenderUsername");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("MSG_SentAt");

                    b.HasKey("Id");

                    b.HasIndex("LiveId");

                    b.ToTable("CHAT_MESSAGES");
                });

            modelBuilder.Entity("Tweetz.MicroServices.LiveService.Models.Live", b =>
                {
                    b.Property<string>("ApiVideoLiveStreamId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LIVE_ApiVideoLiveStreamId");

                    b.Property<string>("ApiVideoStreamKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LIVE_ApiVideoStreamKey");

                    b.Property<bool?>("Broadcasting")
                        .IsRequired()
                        .HasColumnType("bit")
                        .HasColumnName("LIVE_Broadcasting");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("LIVE_CreatedAt");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LIVE_Description");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LIVE_EndTime");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit")
                        .HasColumnName("LIVE_IsPublic");

                    b.Property<bool?>("IsTerminated")
                        .HasColumnType("bit")
                        .HasColumnName("LIVE_IsTerminated");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("LIVE_StartTime");

                    b.Property<int>("StreamerId")
                        .HasColumnType("int")
                        .HasColumnName("LIVE_StreamerId");

                    b.Property<string>("StreamerUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LIVE_StreamerUsername");

                    b.Property<string>("ThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LIVE_Title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("LIVE_UpdatedAt");

                    b.Property<int?>("ViewCount")
                        .HasColumnType("int")
                        .HasColumnName("LIVE_ViewCount");

                    b.Property<int?>("Views")
                        .HasColumnType("int")
                        .HasColumnName("LIVE_Views");

                    b.HasKey("ApiVideoLiveStreamId");

                    b.ToTable("LIVE");
                });

            modelBuilder.Entity("Tweetz.MicroServices.LiveService.Models.ModerationLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LOG_Id");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("LOG_ActionDate");

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LOG_ActionType");

                    b.Property<int?>("DurationSeconds")
                        .HasColumnType("int")
                        .HasColumnName("LOG_DurationSeconds");

                    b.Property<string>("LiveId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("LIVE_ApiVideoLiveStreamId");

                    b.Property<int>("ModeratorId")
                        .HasColumnType("int")
                        .HasColumnName("LOG_ModeratorId");

                    b.Property<int>("TargetUserId")
                        .HasColumnType("int")
                        .HasColumnName("LOG_TargetUserId");

                    b.HasKey("Id");

                    b.HasIndex("LiveId");

                    b.ToTable("MODERATION_LOGS");
                });

            modelBuilder.Entity("Tweetz.MicroServices.LiveService.Models.ChatMessage", b =>
                {
                    b.HasOne("Tweetz.MicroServices.LiveService.Models.Live", "Live")
                        .WithMany()
                        .HasForeignKey("LiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Live");
                });

            modelBuilder.Entity("Tweetz.MicroServices.LiveService.Models.ModerationLog", b =>
                {
                    b.HasOne("Tweetz.MicroServices.LiveService.Models.Live", "Live")
                        .WithMany()
                        .HasForeignKey("LiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Live");
                });
#pragma warning restore 612, 618
        }
    }
}
